{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.17"
        }
      },
      "backend-101-nicl": {
        "id": "backend-101-nicl",
        "path": "backend-101-nicl",
        "children": {
          "VpcId": {
            "id": "VpcId",
            "path": "backend-101-nicl/VpcId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "VPCBackend101nicl": {
            "id": "VPCBackend101nicl",
            "path": "backend-101-nicl/VPCBackend101nicl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.25.0"
            }
          },
          "backend-101-niclPrivateSubnets": {
            "id": "backend-101-niclPrivateSubnets",
            "path": "backend-101-nicl/backend-101-niclPrivateSubnets",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "subnet-#{Token[TOKEN.208]}": {
            "id": "subnet-#{Token[TOKEN.208]}",
            "path": "backend-101-nicl/subnet-#{Token[TOKEN.208]}",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.25.0"
            }
          },
          "CertificateBackend101nicl": {
            "id": "CertificateBackend101nicl",
            "path": "backend-101-nicl/CertificateBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/CertificateBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CertificateManager::Certificate",
                  "aws:cdk:cloudformation:props": {
                    "domainName": "backend-101-nicl.gutools.co.uk",
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl"
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ],
                    "validationMethod": "DNS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_certificatemanager.CfnCertificate",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_certificatemanager.Certificate",
              "version": "2.25.0"
            }
          },
          "InstanceRoleBackend101nicl": {
            "id": "InstanceRoleBackend101nicl",
            "path": "backend-101-nicl/InstanceRoleBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/InstanceRoleBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": {
                              "Fn::Join": [
                                "",
                                [
                                  "ec2.",
                                  {
                                    "Ref": "AWS::URLSuffix"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "path": "/",
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl"
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.25.0"
            }
          },
          "SSMRunCommandPolicy": {
            "id": "SSMRunCommandPolicy",
            "path": "backend-101-nicl/SSMRunCommandPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/SSMRunCommandPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "ec2messages:AcknowledgeMessage",
                            "ec2messages:DeleteMessage",
                            "ec2messages:FailMessage",
                            "ec2messages:GetEndpoint",
                            "ec2messages:GetMessages",
                            "ec2messages:SendReply",
                            "ssm:UpdateInstanceInformation",
                            "ssm:ListInstanceAssociations",
                            "ssm:DescribeInstanceProperties",
                            "ssm:DescribeDocumentParameters",
                            "ssmmessages:CreateControlChannel",
                            "ssmmessages:CreateDataChannel",
                            "ssmmessages:OpenControlChannel",
                            "ssmmessages:OpenDataChannel"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "ssm-run-command-policy",
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.25.0"
            }
          },
          "DescribeEC2Policy": {
            "id": "DescribeEC2Policy",
            "path": "backend-101-nicl/DescribeEC2Policy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/DescribeEC2Policy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:DescribeAutoScalingGroups",
                            "ec2:DescribeTags",
                            "ec2:DescribeInstances"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "describe-ec2-policy",
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.25.0"
            }
          },
          "LoggingStreamName": {
            "id": "LoggingStreamName",
            "path": "backend-101-nicl/LoggingStreamName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "GuLogShippingPolicy": {
            "id": "GuLogShippingPolicy",
            "path": "backend-101-nicl/GuLogShippingPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/GuLogShippingPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "kinesis:Describe*",
                            "kinesis:Put*"
                          ],
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:kinesis:",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                ":stream/",
                                {
                                  "Ref": "LoggingStreamName"
                                }
                              ]
                            ]
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "GuLogShippingPolicy981BFE5A",
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.25.0"
            }
          },
          "DistributionBucketName": {
            "id": "DistributionBucketName",
            "path": "backend-101-nicl/DistributionBucketName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "GetDistributablePolicyBackend101nicl": {
            "id": "GetDistributablePolicyBackend101nicl",
            "path": "backend-101-nicl/GetDistributablePolicyBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/GetDistributablePolicyBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": "s3:GetObject",
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:s3:::",
                                {
                                  "Ref": "DistributionBucketName"
                                },
                                "/deploy/CODE/backend-101-nicl/*"
                              ]
                            ]
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "GetDistributablePolicyBackend101nicl064F77C5",
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.25.0"
            }
          },
          "ParameterStoreReadBackend101nicl": {
            "id": "ParameterStoreReadBackend101nicl",
            "path": "backend-101-nicl/ParameterStoreReadBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/ParameterStoreReadBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": "ssm:GetParametersByPath",
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:ssm:",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                ":parameter/CODE/deploy/backend-101-nicl"
                              ]
                            ]
                          }
                        },
                        {
                          "Action": [
                            "ssm:GetParameters",
                            "ssm:GetParameter"
                          ],
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:ssm:",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                ":parameter/CODE/deploy/backend-101-nicl/*"
                              ]
                            ]
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "parameter-store-read-policy",
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Policy",
              "version": "2.25.0"
            }
          },
          "AMIBackend101nicl": {
            "id": "AMIBackend101nicl",
            "path": "backend-101-nicl/AMIBackend101nicl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "GuHttpsEgressSecurityGroupBackend101nicl": {
            "id": "GuHttpsEgressSecurityGroupBackend101nicl",
            "path": "backend-101-nicl/GuHttpsEgressSecurityGroupBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/GuHttpsEgressSecurityGroupBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Allow all outbound HTTPS traffic",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 443,
                        "toPort": 443,
                        "description": "Allow all outbound HTTPS traffic"
                      }
                    ],
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl"
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ],
                    "vpcId": {
                      "Ref": "VpcId"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.25.0"
                }
              },
              "from backend101niclLoadBalancerBackend101niclSecurityGroupE6DAEC21:8001": {
                "id": "from backend101niclLoadBalancerBackend101niclSecurityGroupE6DAEC21:8001",
                "path": "backend-101-nicl/GuHttpsEgressSecurityGroupBackend101nicl/from backend101niclLoadBalancerBackend101niclSecurityGroupE6DAEC21:8001",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "ipProtocol": "tcp",
                    "description": "Load balancer to target",
                    "fromPort": 8001,
                    "groupId": {
                      "Fn::GetAtt": [
                        "GuHttpsEgressSecurityGroupBackend101niclFC81895F",
                        "GroupId"
                      ]
                    },
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "LoadBalancerBackend101niclSecurityGroup4A83CCDB",
                        "GroupId"
                      ]
                    },
                    "toPort": 8001
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.25.0"
            }
          },
          "AutoScalingGroupBackend101nicl": {
            "id": "AutoScalingGroupBackend101nicl",
            "path": "backend-101-nicl/AutoScalingGroupBackend101nicl",
            "children": {
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "backend-101-nicl/AutoScalingGroupBackend101nicl/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "InstanceRoleBackend101niclD4DB2E69"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                  "version": "2.25.0"
                }
              },
              "LaunchConfig": {
                "id": "LaunchConfig",
                "path": "backend-101-nicl/AutoScalingGroupBackend101nicl/LaunchConfig",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                  "aws:cdk:cloudformation:props": {
                    "imageId": {
                      "Ref": "AMIBackend101nicl"
                    },
                    "instanceType": "t4g.small",
                    "iamInstanceProfile": {
                      "Ref": "AutoScalingGroupBackend101niclInstanceProfile2C1802FF"
                    },
                    "metadataOptions": {
                      "httpTokens": "required"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "GuHttpsEgressSecurityGroupBackend101niclFC81895F",
                          "GroupId"
                        ]
                      },
                      {
                        "Fn::GetAtt": [
                          "WazuhSecurityGroup",
                          "GroupId"
                        ]
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "# executes on startup\naws s3 cp s3://deploy-tools-dist/deploy/CODE/backend-101-nicl.service /etc/systemd/system/backend-101-nicl.service\naws s3 cp s3://deploy-tools-dist/deploy/CODE/hello-world.jar /hello-world.jar\nsystemctl start backend-101-nicl\n"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_autoscaling.CfnLaunchConfiguration",
                  "version": "2.25.0"
                }
              },
              "ASG": {
                "id": "ASG",
                "path": "backend-101-nicl/AutoScalingGroupBackend101nicl/ASG",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                  "aws:cdk:cloudformation:props": {
                    "maxSize": "2",
                    "minSize": "1",
                    "healthCheckGracePeriod": 120,
                    "healthCheckType": "ELB",
                    "launchConfigurationName": {
                      "Ref": "AutoScalingGroupBackend101niclLaunchConfigF7E80655"
                    },
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "gu:cdk:pattern-name",
                        "value": "GuEc2App",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "LogKinesisStreamName",
                        "value": {
                          "Ref": "LoggingStreamName"
                        },
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Name",
                        "value": "backend-101-nicl/AutoScalingGroupBackend101nicl",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Stack",
                        "value": "deploy",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Stage",
                        "value": "CODE",
                        "propagateAtLaunch": true
                      }
                    ],
                    "targetGroupArns": [
                      {
                        "Ref": "TargetGroupBackend101niclB0F12102"
                      }
                    ],
                    "vpcZoneIdentifier": {
                      "Ref": "backend101niclPrivateSubnets"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_autoscaling.CfnAutoScalingGroup",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_autoscaling.AutoScalingGroup",
              "version": "2.25.0"
            }
          },
          "WazuhSecurityGroup": {
            "id": "WazuhSecurityGroup",
            "path": "backend-101-nicl/WazuhSecurityGroup",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/WazuhSecurityGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Allow outbound traffic from wazuh agent to manager",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 1514,
                        "toPort": 1514,
                        "description": "Wazuh event logging"
                      },
                      {
                        "cidrIp": "0.0.0.0/0",
                        "ipProtocol": "tcp",
                        "fromPort": 1515,
                        "toPort": 1515,
                        "description": "Wazuh agent registration"
                      }
                    ],
                    "tags": [
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ],
                    "vpcId": {
                      "Ref": "VpcId"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
              "version": "2.25.0"
            }
          },
          "backend-101-niclPublicSubnets": {
            "id": "backend-101-niclPublicSubnets",
            "path": "backend-101-nicl/backend-101-niclPublicSubnets",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.25.0"
            }
          },
          "subnet-#{Token[TOKEN.274]}": {
            "id": "subnet-#{Token[TOKEN.274]}",
            "path": "backend-101-nicl/subnet-#{Token[TOKEN.274]}",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.25.0"
            }
          },
          "LoadBalancerBackend101nicl": {
            "id": "LoadBalancerBackend101nicl",
            "path": "backend-101-nicl/LoadBalancerBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/LoadBalancerBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "loadBalancerAttributes": [
                      {
                        "key": "deletion_protection.enabled",
                        "value": "true"
                      }
                    ],
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "LoadBalancerBackend101niclSecurityGroup4A83CCDB",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": {
                      "Ref": "backend101niclPublicSubnets"
                    },
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl"
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ],
                    "type": "application"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnLoadBalancer",
                  "version": "2.25.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "backend-101-nicl/LoadBalancerBackend101nicl/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend-101-nicl/LoadBalancerBackend101nicl/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB backend101niclLoadBalancerBackend101nicl50D86926",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 443,
                            "toPort": 443,
                            "description": "Allow from anyone on port 443"
                          }
                        ],
                        "tags": [
                          {
                            "key": "App",
                            "value": "backend-101-nicl"
                          },
                          {
                            "key": "gu:cdk:version",
                            "value": "45.1.3"
                          },
                          {
                            "key": "gu:repo",
                            "value": "guardian/backend-101-nicl"
                          },
                          {
                            "key": "Stack",
                            "value": "deploy"
                          },
                          {
                            "key": "Stage",
                            "value": "CODE"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VpcId"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.25.0"
                    }
                  },
                  "to backend101niclGuHttpsEgressSecurityGroupBackend101nicl6DFA7307:8001": {
                    "id": "to backend101niclGuHttpsEgressSecurityGroupBackend101nicl6DFA7307:8001",
                    "path": "backend-101-nicl/LoadBalancerBackend101nicl/SecurityGroup/to backend101niclGuHttpsEgressSecurityGroupBackend101nicl6DFA7307:8001",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "LoadBalancerBackend101niclSecurityGroup4A83CCDB",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "GuHttpsEgressSecurityGroupBackend101niclFC81895F",
                            "GroupId"
                          ]
                        },
                        "fromPort": 8001,
                        "toPort": 8001
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupEgress",
                      "version": "2.25.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.25.0"
                }
              },
              "LoadBalancerBackend101nicl-DnsName": {
                "id": "LoadBalancerBackend101nicl-DnsName",
                "path": "backend-101-nicl/LoadBalancerBackend101nicl/LoadBalancerBackend101nicl-DnsName",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer",
              "version": "2.25.0"
            }
          },
          "TargetGroupBackend101nicl": {
            "id": "TargetGroupBackend101nicl",
            "path": "backend-101-nicl/TargetGroupBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/TargetGroupBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                  "aws:cdk:cloudformation:props": {
                    "healthCheckIntervalSeconds": 10,
                    "healthCheckPath": "/healthcheck",
                    "healthCheckProtocol": "HTTP",
                    "healthCheckTimeoutSeconds": 5,
                    "healthyThresholdCount": 5,
                    "port": 8001,
                    "protocol": "HTTP",
                    "tags": [
                      {
                        "key": "App",
                        "value": "backend-101-nicl"
                      },
                      {
                        "key": "gu:cdk:version",
                        "value": "45.1.3"
                      },
                      {
                        "key": "gu:repo",
                        "value": "guardian/backend-101-nicl"
                      },
                      {
                        "key": "Stack",
                        "value": "deploy"
                      },
                      {
                        "key": "Stage",
                        "value": "CODE"
                      }
                    ],
                    "targetGroupAttributes": [
                      {
                        "key": "deregistration_delay.timeout_seconds",
                        "value": "30"
                      },
                      {
                        "key": "stickiness.enabled",
                        "value": "false"
                      }
                    ],
                    "targetType": "instance",
                    "unhealthyThresholdCount": 2,
                    "vpcId": {
                      "Ref": "VpcId"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnTargetGroup",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationTargetGroup",
              "version": "2.25.0"
            }
          },
          "ListenerBackend101nicl": {
            "id": "ListenerBackend101nicl",
            "path": "backend-101-nicl/ListenerBackend101nicl",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend-101-nicl/ListenerBackend101nicl/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                  "aws:cdk:cloudformation:props": {
                    "defaultActions": [
                      {
                        "type": "forward",
                        "targetGroupArn": {
                          "Ref": "TargetGroupBackend101niclB0F12102"
                        }
                      }
                    ],
                    "loadBalancerArn": {
                      "Ref": "LoadBalancerBackend101nicl8DA158B3"
                    },
                    "certificates": [
                      {
                        "certificateArn": {
                          "Ref": "CertificateBackend101nicl37CCCF1C"
                        }
                      }
                    ],
                    "port": 443,
                    "protocol": "HTTPS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.CfnListener",
                  "version": "2.25.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
              "version": "2.25.0"
            }
          },
          "dns": {
            "id": "dns",
            "path": "backend-101-nicl/dns",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnResource",
              "version": "2.25.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.25.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.25.0"
    }
  }
}